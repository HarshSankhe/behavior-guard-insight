const mongoose = require('mongoose');

const alertSchema = new mongoose.Schema({
  userId: {
    type: mongoose.Schema.Types.ObjectId,
    ref: 'User',
    required: true
  },
  sessionId: {
    type: String,
    required: true
  },
  type: {
    type: String,
    required: true,
    enum: [
      'Anomaly Detected',
      'Login from New Device', 
      'Behavioral Deviation',
      'Suspicious Activity',
      'Authentication Failure',
      'Model Training Required',
      'System Alert'
    ]
  },
  severity: {
    type: String,
    enum: ['Low', 'Medium', 'High', 'Critical'],
    required: true
  },
  status: {
    type: String,
    enum: ['Unresolved', 'Investigating', 'Resolved', 'False Positive'],
    default: 'Unresolved'
  },
  description: {
    type: String,
    required: true
  },
  details: {
    riskScore: Number,
    factors: {
      typingSpeed: String,
      mouseSpeed: String,
      latency: String,
      appUsage: String
    },
    recommendations: [String],
    autoGenerated: { type: Boolean, default: true }
  },
  resolvedBy: {
    type: mongoose.Schema.Types.ObjectId,
    ref: 'User',
    default: null
  },
  resolvedAt: {
    type: Date,
    default: null
  },
  resolution: {
    type: String,
    default: null
  }
}, {
  timestamps: true
});

// Indexes
alertSchema.index({ userId: 1, createdAt: -1 });
alertSchema.index({ status: 1, severity: 1 });
alertSchema.index({ sessionId: 1 });

module.exports = mongoose.model('Alert', alertSchema);